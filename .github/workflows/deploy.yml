name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          # Navigate to project directory
          cd /opt/drafteam || { echo "Project directory not found"; exit 1; }
          
          # Pull latest changes
          echo "Pulling latest changes from GitHub..."
          git pull origin main
          
          # Copy environment files if they don't exist
          if [ ! -f .env ]; then
            cp .env.example .env
            echo "Created .env file from example"
          fi
          
          if [ ! -f server/.env ]; then
            cp server/.env.example server/.env
            echo "Created server/.env file from example"
          fi
          
          # Stop existing containers
          echo "Stopping existing containers..."
          docker-compose -f docker-compose.prod.yml down
          
          # Remove old images to ensure fresh build
          echo "Removing old images..."
          docker image prune -f
          
          # Build and start new containers
          echo "Building and starting new containers..."
          docker-compose -f docker-compose.prod.yml up -d --build
          
          # Wait for services to be ready
          echo "Waiting for services to start..."
          sleep 30
          
          # Check if services are running
          echo "Checking service status..."
          docker-compose -f docker-compose.prod.yml ps
          
          # Test if application is responding
          echo "Testing application health..."
          curl -f http://localhost:3001/api/health || echo "Backend health check failed"
          curl -f http://localhost:3000 || echo "Frontend health check failed"
          
          echo "Deployment completed!"