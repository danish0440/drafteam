version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    networks:
      - drafteam-network
    restart: unless-stopped

  # Backend Node.js API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DB_PATH=/app/database/drafttracker.db
      - UPLOAD_DIR=/app/uploads
    volumes:
      - backend-uploads:/app/uploads
      - backend-database:/app/database
    networks:
      - drafteam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database backup service (optional)
  db-backup:
    image: alpine:latest
    volumes:
      - backend-database:/data
      - ./backups:/backups
    command: |
      sh -c '
        while true; do
          tar -czf /backups/db-backup-$$(date +%Y%m%d-%H%M%S).tar.gz -C /data .
          find /backups -name "db-backup-*.tar.gz" -mtime +7 -delete
          sleep 86400
        done
      '
    networks:
      - drafteam-network
    restart: unless-stopped

volumes:
  backend-uploads:
    driver: local
  backend-database:
    driver: local

networks:
  drafteam-network:
    driver: bridge